#!/usr/bin/env python3.7
# -*- coding: UTF-8 -*-

__author__ = "Zsolt Pető"
__license__ = "MIT"
__version__ = "1.2"

from inpcheck import *
from os import walk, system
from sys import argv, platform, exit
import codecs
import subprocess
import re


if len(argv) < 2:
    print("\nMissing argument! ! !")
    print("\nUsage:\n"
          "$ pyause /somewhere/audit_log")
    exit(1)


c = 120
LogPath = argv[1]
FileNames = []
AllFileContent = []

smbu = "sudo pdbedit -L".split()

def clearscreen():
    if platform == "linux" or platform == "linux2":
        system('clear')
    elif platform == "win32":
        system('cls')


def fline():
    print("#"*c)


def line():
    print("")


def beginl():
    fline()
    line()


def endl():
    line()
    fline()


def unique(list1):
    unique_list = []
    for x in list1:
        if x not in unique_list:
            unique_list.append(x)
    return unique_list


if platform == "linux" or platform == "linux2":
    fo = '/'
elif platform == "win32":
    fo = '\\'


beginl()
print("A log fájlok beolvasása eltarthat néhány másodpercig.".center(c))
print("It may take a few seconds to read the log files.".center(c))
print("[CTRL-C]-re kilép a programból. - Press [CTRL-C] to exit.".center(c))
endl()


# Read usernames - sudo required !
process = subprocess.run(smbu, check=True, stdout=subprocess.PIPE, universal_newlines=True)
names = str(process.stdout)

UNames = (re.split('; |\n', names))
UserNames = [i.split(':', 1)[0] for i in UNames]

last = int(len(UserNames))-1
del UserNames[last]
UserNames.sort()
# Uncomment the following line, and change 'lnx03' to anything.
# I also use the hostname for the search, because it then searches for all the information.
#UserNames.append("lnx03")


# Read .txt Filenames
for (dirpath, dirnames, filenames) in walk(LogPath, topdown=True):
    FileNames.extend(filenames)
    break
FileNames.sort()
FileNames = [ l for l in FileNames if ".txt" in l ]

# Read all Files content
for y in FileNames:
    with codecs.open(LogPath+fo+y, 'r', 'UTF-8') as f:
        for i in f:
            AllFileContent.append(i)


# Filter repeated message
FilElement = [s for s in AllFileContent if "message repeated" not in s]


# Main function
def main():
    try:
        while True:
            #############################################################################################################
            # Readout and ask the user name
            clearscreen()
            User = []
            while len(User) == 0:
                fline()
                for i, username in enumerate(UserNames):
                    print(f"{i} - {username}")

                fline()
                User = range_check("Válassz felhasználót. - Choose a user. [Ex.: 1]: ", 0, len(UserNames)-1)

                # Collect the selected user data
                User = [s for s in FilElement if UserNames[User] in s]
                if len(User) == 0:
                    print("Nem talált adatokat a felhasználóról! - Could't find information about the user!")

            # Ask the filename or the file extension
            Data = []
            while len(Data) == 0:
                FindData = name_check("Mi a fájl neve vagy kiterjesztése? - What is the file name or extension? [Ex.: xls; 123.pdf]: ")

                # This is the end result
                Data = [s for s in User if FindData in s]
                if len(Data) == 0:
                    print(f"Nem találta a(z) [{FindData}] fájlt! - Could't find the [{FindData}] file!")

            # How many results to list
            bit = (range_check(f"Hány sort listázzon? - How many lines to list? [min:1 max: {len(Data)}]: ", 1, len(Data))) * -1

            # Unique = Sort out the same lines
            EndData = unique(Data)

            beginl()
            # Writes out the requested last result
            y, x = 1, 1
            for d in EndData[bit:]:
                print(f"{y}. {d}", end='')
                if x == 20:
                    input("\nNyomj egy [Entert] a lista folytatásához. - Press [Enter] to continue the list.\n")
                    x = 0
                y += 1
                x += 1

            endl()
            line()
            print("[CTRL-C]-re kilép a programból. - Press [CTRL-C] to exit.".center(c))
            input("Nyomj egy [Entert] a folytatáshoz! - Press [Enter] to continue!".center(c))
            clearscreen()
            #############################################################################################################
    except KeyboardInterrupt:
        exit("\nViszlát - Bye Bye")


if __name__ == '__main__':
    main()
